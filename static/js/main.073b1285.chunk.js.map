{"version":3,"sources":["util/Config.js","page/MainPage.js","page/UserGuide.js","page/Download.js","page/Java.js","page/Android.js","page/Contact.js","page/NotFound.js","component/Static/NavBarTop.js","util/Constant.js","component/Static/SideBarLeft.js","component/Static/SideBarRight.js","component/Static/NavBarBottom.js","page/Dashboard.js","App.js","index.js"],"names":["processEnv","process","fixProcessEnv","console","log","debugEnabled","infoEnabled","consoleLogPrefixMsg","prefix","msg","contextRoot","config","fixContextPath","url","urlOut","dateYMDFormat","timeHmFormat","HOME","HOME_INDEX","USERGUIDE","DOWNLOAD","JAVA","ANDROID","CONTACT","consoleLogMsg","consoleLog","MainPage","props","Component","UserGuide","name","className","smooth","to","id","Table","striped","bordered","size","align","valign","hover","href","colSpan","Download","color","border","width","height","src","alt","Java","Android","Contact","NotFound","NavBarTop","context","fixNAV_TOP_HEIGHT","NAV_TOP_HEIGHT","outerHeight","document","getElementById","elm","offsetHeight","style","getComputedStyle","marginTopBottom","parseInt","marginTop","marginBottom","ohTotal","handleScroll","topBarVisibleStatusNEW","scrollPosYNEW","window","pageYOffset","topBarVisibleStatusPREV","state","topBarVisibleStatus","scrollDOWN","SCROLLPOS_YPREV","setState","_canMount","currentUser","this","addEventListener","removeEventListener","topBarVisibleSTATUS","nav1ClassName","nav2ClassName","gotoLink","styleBtn","marginRight","styleDdItemMargins","marginLeft","padding","verticalAlign","fontSize","Navbar","collapseOnSelect","expand","variant","backgroundColor","Toggle","aria-controls","Collapse","Nav","onClick","Button","DropdownButton","as","ButtonGroup","title","Dropdown","Divider","SideBarLeft","param","paramTitle","divContent","Form","inline","FormControl","type","placeholder","paddingTop","SideBarRight","NavBarBottom","Brand","Text","Dashboard","fixWindowLocation","wloc","location","wlpathname","pathname","wlsearch","search","link","pageLink","GoMainPage","paramSideBarLeft","paramSideBarRight","styleSidesBG","role","App","position","appMain","rootElem","ReactDOM","render"],"mappings":"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","file":"static/js/main.073b1285.chunk.js","sourcesContent":["import config from \"./config.json\";\r\n\r\n//!!!ERROR!!!\r\n//Module not found: You attempted to import ../../public/data/params.json which falls outside of the project src/ directory. Relative imports outside of src/ are not supported.\r\n//import config from \"../../public/data/params.json\";\r\n\r\n//---------------------------------\r\nconst processEnv = fixProcessEnv();\r\n//console.log(\"processEnv:\" + processEnv);\r\n\r\n//export\r\nconst ENV_development = \"development\";\r\n//const ENV_test = \"test\";\r\nconst ENV_production = \"production\";\r\n\r\nfunction fixProcessEnv() {\r\n    let processEnv = process.env.NODE_ENV;\r\n    if (!processEnv)\r\n        processEnv = ENV_development;\r\n    return processEnv;\r\n}\r\n\r\n\r\n//---------------------------------\r\n//logLEVELApp:0(NONE); 1(DEBUG+INFO); 2(INFO only)\r\nconst logLEVELApp = 1;\r\nconsole.log(\"logLEVELApp:\" + logLEVELApp + \", processEnv:\" + processEnv);\r\n\r\n/*\r\nexport const isDebugEnabled = () => {\r\n    return logLEVELApp >= 1;\r\n};\r\n*/\r\n\r\nexport const debugEnabled = (logLEVELApp === 1) && (processEnv === ENV_development);\r\nif (debugEnabled)\r\n    console.log(\"debugEnabled:\" + debugEnabled);\r\n\r\nexport const infoEnabled = (logLEVELApp <= 2 && logLEVELApp >= 1) && (processEnv !== ENV_production)\r\nif (infoEnabled)\r\n    console.log(\"infoEnabled:\" + infoEnabled);\r\n\r\nexport const consoleLogPrefixMsg = (prefix) => (msg) => console.log(prefix + \".\" + msg);\r\n\r\n//TODO?\r\n//export const warnEnabled = (logLEVELApp <= 3 && logLEVELApp >= 1);\r\n//console.log(\"warnEnabled:\" + warnEnabled);\r\n\r\n//export const errorEnabled = (logLEVELApp <= 4 && logLEVELApp >= 1);\r\n//console.log(\"errorEnabled:\" + errorEnabled);\r\n//---------------------------------------------\r\n\r\n\r\nlet envApp = null;\r\nexport function fixEnv() {\r\n    if (envApp != null)\r\n        return envApp;\r\n\r\n    envApp = Object.assign({}, config[processEnv]);\r\n    if (debugEnabled)\r\n        console.log(\"!! envApp.url: \" + envApp.url);\r\n\r\n    return envApp;\r\n}\r\n\r\n\r\n//---------------------------------\r\nexport const contextRoot = config.contextRoot;\r\nif (infoEnabled) {\r\n  console.log(\"contextRoot: \" + contextRoot);\r\n  //test?\r\n  console.log(\"config.dateYMDFormat: \" + config.dateYMDFormat);\r\n  console.log(\"config.timeHmFormat: \" + config.timeHmFormat);\r\n}\r\n\r\n//For caring WAR type routing main page:\r\nexport function fixContextPath(url) {\r\n  let urlOut = url;\r\n  if (contextRoot)\r\n      urlOut = contextRoot + urlOut;\r\n\r\n  if (debugEnabled)\r\n    console.log(\"fixContextPath.urlOut: [\" + urlOut + \"]\");\r\n\r\n  return urlOut;\r\n}\r\n\r\n\r\n//---------------------------------\r\n//PAGES\r\nexport const HOME = fixContextPath(\"/\");\r\nexport const HOME_INDEX = fixContextPath(\"/index.html\");\r\n\r\n//export const LOGIN = fixContextPath(\"/login\");\r\n\r\nexport const USERGUIDE = fixContextPath(\"/userguide\");\r\n\r\nexport const DOWNLOAD = fixContextPath(\"/download\");\r\n\r\nexport const JAVA = fixContextPath(\"/java\");\r\n\r\nexport const ANDROID = fixContextPath(\"/android\");\r\n\r\nexport const CONTACT = fixContextPath(\"/contact\");\r\n","import React, { Component } from \"react\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"MainPage\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\nclass MainPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (debugEnabled)\r\n      consoleLog(\"constructor\");\r\n  }\r\n\r\n  /*?\r\n  componentDidMount() {\r\n    if (debugEnabled)\r\n      consoleLog(\"componentDidMount\");\r\n  }\r\n  */\r\n\r\n  render() {\r\n    if (debugEnabled)\r\n      consoleLog(\"render\");\r\n\r\n    return (\r\n      <div>\r\n        SelimSql is a free relational database management system.\r\n        <br/>\r\n        Database commands, like create, update, insert, delete, select are implemented by standard SQL.\r\n        <br/><br/>\r\n      \r\n        <h4><u>The basic features of SelimSql database:</u></h4>\r\n        &#10004; Database language is standard SQL,\r\n      \r\n        <br/>\r\n        &#10004; Updatable, insertable resultset functionality,\r\n      \r\n        <br/>\r\n        &#10004; Supports most data types of the SQL standard, including datetime,\r\n      \r\n        <br/>\r\n        &#10004; Supports arithmetic operations with datetime,\r\n      \r\n        <br/>\r\n        &#10004; Selection of group and summary fields on sql columns,\r\n      \r\n        <br/>\r\n        &#10004; JDBC DatabaseMetaData and ResultSetMetaData support,\r\n      \r\n        <br/>\r\n        &#10004; Fast select, insert, update, delete operations,\r\n      \r\n        <br/>\r\n        &#10004; Columns calculated using other columns and function calls,\r\n      \r\n        <br/>\r\n        &#10004; Allows single or multiple insert depending on existing data,\r\n      \r\n        <br/>\r\n        &#10004; DBMS is developed on java and support JDK 1.6 or after versions,\r\n      \r\n        <br/>\r\n        &#10004; Order by, group by, count, sum, min, max statistical aggregate functions,\r\n      \r\n        <br/>\r\n        &#10004; Disk based tables for large data sets.\r\n        <br/><br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\n//import { USERGUIDE } from \"../util/Config\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"UserGuide\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\nclass UserGuide extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (debugEnabled)\r\n      consoleLog(\"constructor\");\r\n  }\r\n\r\n  /*?\r\n  componentDidMount() {\r\n    if (debugEnabled)\r\n      consoleLog(\"componentDidMount\");\r\n  }\r\n  */\r\n\r\n //prev? <div className=\"row text-center\">\r\n\r\n//USELESS!\r\n/*\r\n  focusElm = (event) => {\r\n    const srcElm = event.target;\r\n    const srcName = (srcElm == null ? null : srcElm.name);\r\n    if (debugEnabled)\r\n      consoleLog(\"focusElm.srcName:\" + srcName);\r\n\r\n    if (srcName == null)\r\n      return;\r\n\r\n    const targetId = \"id_\" + srcName;\r\n    const targetElm = document.getElementById(targetId);\r\n    if (targetElm == null)\r\n      return;\r\n\r\n    if (debugEnabled)\r\n      consoleLog(\"focusElm.targetId:\" + targetId + \" EXIST\");\r\n    //! React.findDOMNode(targetElm).focus();\r\n    targetElm.focus();\r\n  }\r\n\r\n//TestLater?\r\n<Link to=\"/path#hash\" scroll={el => el.scrollIntoView({ behavior: 'instant', block: 'end' })}\r\n>Link to Hash Fragment</Link>\r\n\r\n? el.scrollIntoView({ behavior: 'instant', block: 'end' })}\r\n\r\nsetTimeout(() => { elm.scrollIntoView({ behavior: 'smooth' }) }, 500);\r\n*/\r\n\r\n  render() {\r\n    if (debugEnabled)\r\n      consoleLog(\"render\");\r\n\r\n    return (\r\n     <div>\r\n      <h2 name=\"start\">SelimSql Syntax</h2>\r\n      <p>SelimSql jdbc connection driver supports the following data definition language(DDL), data manipulation language(DML) and query language statements.\r\n      </p>\r\n\r\n      <h3>Table Of Contents</h3>\r\n      <div className=\"list-group\">\r\n        <HashLink className=\"list-group-item\" smooth to=\"#jdbcDriver\">Connection Driver Class And Url</HashLink>\r\n\r\n        <HashLink className=\"list-group-item\" to=\"#ddlStatements\">Data Definition Statements</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#createTable\">-Create Table</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#dropTable\">-Drop Table</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#createIndex\">-Create Index</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#dropIndex\">-Drop Index</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#renameTable\">-Rename Table</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#alterTable\">-Alter Table</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#createSequence\">-Create Sequence</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#dropSequence\">-Drop Sequence</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#createUser\">-Create User</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#alterUserPass\">-Alter User Pass</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#dropUser\">-Drop User</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#databaseGrants\">-Grant Database</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#databaseTableGrants\">-Grant Database Table</HashLink>\r\n\r\n        <HashLink className=\"list-group-item\" to=\"#dmlStatements\">Data Manipulation Statements</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#insertStatement\">-Insert Record</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#updateStatement\">-Update Record</HashLink>\r\n        <HashLink className=\"list-group-item small\" to=\"#deleteStatement\">-Delete Record</HashLink>\r\n\r\n        <HashLink className=\"list-group-item\" to=\"#selectStatement\">Select Statement</HashLink>\r\n        <HashLink className=\"list-group-item\" to=\"#sqlFunctions\">Sql Functions</HashLink>\r\n      </div>\r\n\r\n      <br/><br/>\r\n\r\n   <span id=\"jdbcUrl\"></span>\r\n   <h3 id=\"jdbcDriver\">Connection Driver Class And Url</h3>\r\n\r\n<pre className=\"lang-markup\">\r\n<Table striped bordered size=\"sm\">\r\n  <thead>\r\n    <tr>\r\n      <th>Jdbc Driver Class</th>\r\n      <th>selimsql.jdbc.DbDriver</th>\r\n      <th></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n   <td align='center' valign='top'>Jdbc Url</td>\r\n   <td align='left' valign='top'>jdbc:selimsql:\r\n    <br/>\r\n    <font size=\"-1\">&lt;<i>DbTypeOrOperation</i>&gt;:&lt;<i>DbPathName</i>&gt;</font></td>\r\n   <td align='left'><b>DbTypeOrOperation:</b>\r\n<br/>\r\n-<u>file</u>: Connect to a file based database.\r\n<br/><br/>\r\n-<u>&#47;&#47;ServerIp:ServerPort(9933)</u>:\r\n<br/>\r\nConnect to host based database.\r\n<br/><br/>\r\n-<u>fileNewDatabase</u>: Create a new database.\r\n<br/><br/>\r\n-<u>fileDropDatabase</u>: Drop the database.\r\n<br/><br/>\r\n<b>DbPathName:</b>\r\nDatabase location and name.\r\n<br/><br/>\r\n<b>Example for connect:</b>\r\n<br/>jdbc:selimsql:file:D:/SSqlData/Stok\r\n<br/>jdbc:selimsql://192.168.2.3:9933/MyDb\r\n<br/><br/>\r\n<b>Example for new database:</b>\r\n<br/>jdbc:selimsql:fileNewDatabase:D:/SSqlData/MyDb\r\n   </td>\r\n  </tr>\r\n  </tbody>\r\n </Table>\r\n </pre>\r\n\r\n\r\n <br/><br/>\r\n <h3 id=\"ddlStatements\">Data Definition Statements</h3>\r\n\r\n <h4 id=\"createTable\">-Create Table</h4>\r\n\r\n<pre className=\"lang-sql\">\r\n CREATE TABLE &lt;TableName&gt; ( &lt;ColumnDefinition&gt; &#91;, ...&#93;)<br/>\r\n \r\n <b>ColumnDefinition:</b><br/>\r\n &lt;ColumnName&gt; &lt;DataType&gt; &#91;(&lt;ColumnSize&gt;&#91;, &lt;Precision&gt;&#93;) &#91;NOT NULL&#93;&#93;<br/>\r\n\r\n<br/>\r\n<Table striped bordered hover size=\"sm\">\r\n<thead>\r\n  <tr>\r\n    <th align=\"left\">DataType</th>\r\n    <th align=\"left\">Java Equivalent Type</th>\r\n  </tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n <td>VARCHAR | CHAR | LONGCHAR</td>\r\n <td>java.lang.String</td>\r\n</tr>\r\n<tr>\r\n <td>BIGINT</td>\r\n <td>java.lang.Long</td>\r\n</tr>\r\n<tr>\r\n <td>INTEGER</td>\r\n <td>java.lang.Integer</td>\r\n</tr>\r\n<tr>\r\n <td>SMALLINT</td>\r\n <td>java.lang.Short</td>\r\n</tr>\r\n<tr>\r\n <td>BYTE</td>\r\n <td>java.lang.Byte</td>\r\n</tr>\r\n<tr>\r\n <td>DECIMAL | NUMBER | MONEY</td>\r\n <td>java.lang.Double | java.math.BigDecimal</td>\r\n</tr>\r\n<tr>\r\n <td>DATE</td>\r\n <td>java.sql.Date</td>\r\n</tr>\r\n<tr>\r\n <td>TIMESTAMP</td>\r\n <td>java.sql.Timestamp</td>\r\n</tr>\r\n<tr>\r\n <td>BLOB</td>\r\n <td>java.lang.byte[]</td>\r\n</tr>\r\n</tbody>\r\n</Table>\r\n\r\n<b>Example:</b><br/>\r\nCREATE TABLE Product<br/>\r\n(Id INTEGER NOT NULL,<br/>\r\n Name VARCHAR(20) NOT NULL,<br/>\r\n Description VARCHAR(50),<br/>\r\n Price DECIMAL(15, 2) NOT NULL,<br/>\r\n ProductDate DATE NOT NULL,<br/>\r\n Status CHAR NOT NULL,<br/>\r\n Comment LONGTEXT,<br/>\r\n Photo BLOB)<br/>\r\n</pre>\r\n\r\n\r\n<br/>\r\n<div id=\"dropTable\">\r\n  <h4>-Drop Table</h4>\r\n  <pre className=\"lang-sql\">\r\n  DROP TABLE &lt;TableName&gt;\r\n  </pre>\r\n</div>\r\n\r\n\r\n<br/>\r\n<h4 id=\"createIndex\">-Create Index</h4>\r\n<pre className=\"lang-sql\">\r\nCREATE [UNIQUE] INDEX &lt;IndexName&gt; ON &lt;TableName&gt;(&lt;ColumnName&gt; [, ...])\r\n\r\n<b>Example1:</b>\r\nCREATE UNIQUE INDEX ProductPk ON Product(ProductId)\r\n\r\n<b>Example2:</b>\r\nCREATE INDEX ProductDateIdx ON Product(ProductDate, Status)\r\n</pre>\r\n\r\n\r\n<br/>\r\n<h4 id=\"dropIndex\">-Drop Index</h4>\r\n<pre className=\"lang-sql\">\r\nDROP INDEX &lt;IndexName&gt;</pre>\r\n\r\n\r\n<br/>\r\n<h4 id=\"renameTable\">-Rename Table</h4>\r\n<pre className=\"lang-sql\">\r\nRENAME &lt;TableName&gt; TO &lt;NewTableName&gt;</pre>\r\n\r\n<br/>\r\n<h4 id=\"alterTable\">-Alter Table</h4>\r\nFor now, altering the table structure is not supported.\r\n<br/>\r\nYou can follow alternative method to alter table:\r\n\r\n<br/>\r\n<font size=\"-1\">\r\na) <HashLink to=\"#createTable\">Create a new table</HashLink> and <HashLink to=\"#createIndex\">index</HashLink> like this:\r\n</font>\r\n<pre className=\"lang-sql\">\r\nCREATE TABLE YourNewTableName\r\n(Id INTEGER NOT NULL,\r\n Column2 type,\r\n Column3 type,\r\n ...\r\n )\r\n\r\nCREATE UNIQUE INDEX YourNewTableNamePk ON YourNewTableName(Id)\r\n</pre>\r\n\r\n\r\n<br/>\r\n<font size=\"-1\">\r\nb) Move records from your old table:\r\n</font>\r\n<pre className=\"lang-sql\">\r\ninsert into YourNewTable\r\nselect id, column2, column3, ... , 'NewData' as NewColumn from YourOldTable\r\n</pre>\r\n\r\n\r\n<br/>\r\n<font size=\"-1\">\r\nc) Delete old table:\r\n</font>\r\n<pre className=\"lang-sql\">\r\nDrop table YourOldTable\r\n</pre>\r\n\r\n\r\n<br/>\r\n<font size=\"-1\">\r\nd) Rename new table as old table:\r\n</font>\r\n<pre className=\"lang-sql\">\r\nRename YourNewTable to YourOldTable\r\n</pre>\r\n\r\n\r\n<br/><br/>\r\n<div id=\"createSequence\">\r\n  <h4>-Create Sequence</h4>\r\n  <pre className=\"lang-sql\">\r\n  Create SEQUENCE &lt;SEQ_NAME&gt; [STARTVALUE 1] [MINVALUE 1] [MAXVALUE 9999999999999999999] [INCREMENT 1] [CYCLE]\r\n\r\n  Example:\r\n  Create SEQUENCE Seq_Order_Id;\r\n\r\n  <a href='#sequenceFunctions'>Look at other Sequence Functions</a>\r\n  </pre>\r\n</div>\r\n\r\n\r\n<br/><br/>\r\n<div id=\"dropSequence\">\r\n  <h4>-Drop Sequence</h4>\r\n  <pre className=\"lang-sql\">\r\n  Drop SEQUENCE &lt;SEQ_NAME&gt;\r\n\r\n  Example:\r\n  Drop SEQUENCE Seq_Order_Id;\r\n  </pre>\r\n</div>\r\n\r\n<br/><br/>\r\n<h4 id=\"createUser\">-Create User</h4>\r\n<pre className=\"lang-sql\">\r\nCREATE USER &lt;UserName&gt; BY PASSWORD &lt;UserPassword&gt;</pre>\r\n\r\n<br/>\r\n<h4 id=\"alterUserPass\">-Alter User Pass</h4>\r\n<pre className=\"lang-sql\">\r\nALTER USER &lt;UserName&gt; BY PASSWORD &lt;UserPassword&gt;</pre>\r\n\r\n<br/>\r\n<h4 id=\"dropUser\">-Drop User</h4>\r\n<pre className=\"lang-sql\">DROP USER &lt;UserName&gt;</pre>\r\n\r\n\r\n<br/>\r\n<h4 id=\"databaseGrants\">-Database Grants</h4>\r\n<pre className=\"lang-sql\">GRANT grant1[,grant2,..] TO &lt;UserName&gt;\r\n\r\n<b>Database Grants:</b>\r\nALL, NONE, BUILDTABLE, DROPTABLE, RENAMETABLE, BUILDUSER, DROPUSER, ALTERUSER\r\n\r\n<b>Example:</b>\r\nGRANT ALL TO admin\r\n</pre>\r\n\r\n\r\n<br/>\r\n<h4 id=\"databaseTableGrants\">-Database Table Grants</h4>\r\n<pre className=\"lang-sql\">GRANT grant1[,grant2,..] ON &lt;TableName&gt; TO &lt;UserName&gt;\r\n\r\n<b>Database Table Grants:</b>\r\nALL, NONE, ALTERTABLE, BUILDINDEX, DROPINDEX, SELECT, INSERT, UPDATE, DELETE\r\n\r\n<b>Example:</b>\r\nGRANT Select,Update,Insert ON Customer TO admin\r\n\r\n</pre>\r\n\r\n\r\n\r\n\r\n<br/><br/>\r\n<h3 id=\"dmlStatements\">Data Manipulation Statements</h3>\r\n<br/>\r\n<h4 id=\"insertStatement\">-Insert Record</h4>\r\n<pre className=\"lang-sql\">INSERT INTO &lt;Table&gt;[(&lt;Column&gt; [,...] )]\r\n&#123; VALUES(&lt;Expression&gt; [,...]) | &lt;SelectStatement&gt; &#125;;\r\n\r\n<b>Example1:</b>\r\nINSERT INTO Product(ProductId, Name, Description, Price, ProductDate, Status)\r\nVALUES(1, 'Product1', null, 12.35, Today(), 'A');\r\n\r\n<b>Example2:</b>\r\nINSERT INTO Product\r\nVALUES(2, 'Product2', null, 23.68, Today(-1), 'P');\r\n\r\n<b>Example3:</b>\r\nINSERT INTO Product\r\nselect * from ProductOther where ProductId &lt;= 10;\r\n</pre>\r\n\r\n\r\n<br/>\r\n<h4 id=\"updateStatement\">-Update Record</h4>\r\n<pre className=\"lang-sql\">UPDATE &lt;Table&gt; SET &lt;Column&gt; = &lt;Expression&gt; [, ...] [WHERE &lt;Expression&gt;];\r\n\r\n<b>Example:</b>\r\nUPDATE Product\r\nSET Description = Name + ' Desc.',\r\n    Price = Price * 0.95\r\nWHERE Description IS NULL\r\n</pre>\r\n\r\n<br/>\r\n<h4 id=\"deleteStatement\">-Delete Record</h4>\r\n<pre className=\"lang-sql\">DELETE FROM &lt;Table&gt; [WHERE &lt;Expression&gt;]\r\n\r\n<b>Example:</b>\r\nDELETE FROM Product\r\nWHERE Status = 'P'\r\n</pre>\r\n\r\n<br/><br/>\r\n<h3 id=\"selectStatement\">Select Statement</h3>\r\n<pre className=\"lang-sql\">SELECT &#123; &lt;SelectExpression&gt; | &lt;Table&gt;.* | * &#125; [, ...]\r\nFROM &lt;TableList&gt;\r\n[WHERE &lt;Expression&gt;]\r\n[GROUP BY &lt;Expression&gt; [, ...]]\r\n[ORDER BY &lt;OrderExpression&gt; [, ...]]\r\n\r\n<b>Expression:</b>\r\n&lt;Condition&gt; [&#123; OR | AND &#125; &lt;Condition&gt;]\r\n\r\n<b>Condition:</b>\r\n&#123; &lt;Value&gt; [|| &lt;Value&gt;]\r\n | &lt;Value&gt; &#123; = | &lt; | &lt;= | &gt; | &gt;= | &lt;&gt; | != &#125; &lt;Value&gt;\r\n | &lt;Value&gt; IS [NOT] NULL\r\n | &lt;Value&gt; [NOT] LIKE &lt;Value&gt; &#125;\r\n\r\n<b>Value:</b>\r\n[+ | -] &#123; &lt;Term&gt; [&#123; + | - | * | / | || &#125; &lt;Term&gt;]\r\n | ( &lt;Condition&gt; )\r\n | &lt;function&gt;([&lt;parameter&gt;] [,...])\r\n\r\n<b>Term:</b>\r\n&#123; 'string' | number | floatingpoint\r\n | [&lt;Table&gt;.]&lt;Column&gt; | TRUE | FALSE | NULL &#125;\r\n\r\n\r\n\r\n\r\n<b>Example1:</b>\r\nselect * from Product\r\nwhere ProductId &lt;= 2;\r\n\r\n<Table striped bordered hover size=\"sm\">\r\n<thead>\r\n<tr>\r\n <th align=\"right\">ProductId</th>\r\n <th>Name</th>\r\n <th>Description</th>\r\n <th align=\"right\">Price</th>\r\n <th>ProductDate</th>\r\n <th>Status</th>\r\n</tr>\r\n</thead>\r\n\r\n<tbody>\r\n<tr>\r\n  <td align=\"right\">=======</td>\r\n<td>======</td>\r\n<td>============</td>\r\n<td align=\"right\">======</td>\r\n<td>============</td>\r\n<td>====</td>\r\n</tr>\r\n\r\n<tr>\r\n<td align=\"right\">1</td>\r\n<td>Product1</td>\r\n<td>Product1 Desc.</td>\r\n<td align=\"right\">11,73</td>\r\n<td>07.11.2011</td>\r\n<td>A</td>\r\n</tr>\r\n\r\n<tr>\r\n<td align=\"right\">2</td>\r\n<td>Product2</td>\r\n<td>Product2 Desc.</td>\r\n<td align=\"right\">22,50</td>\r\n<td>08.11.2011</td>\r\n<td>P</td>\r\n</tr>\r\n</tbody>\r\n</Table>\r\n\r\n\r\n<b>Example2:</b>\r\nSELECT ProductDate, count(ProductId) AS Number\r\nFROM Product\r\nGROUP BY ProductDate\r\nORDER BY 1 DESC;\r\n\r\n\r\n<b>Example3:</b>\r\nselect o.OrderId, o.OrderDate, p.Name as Product, o.OrderNumber, (o.OrderNumber * o.UnitPrice) as Price,\r\n(c.Name + ' ' + c.Surname) as Customer\r\nfrom Order o, Customer c, Product p\r\nwhere o.OrderDate >= DateFromStr('01.06.2010','dd.MM.yyyy')\r\n  and o.OrderDate &lt;= DateFromStr('27.10.2011','dd.MM.yyyy')\r\n  and c.CustomerId = o.CustomerId\r\n  and p.ProductId = o.ProductId\r\norder by 1, 2;\r\n</pre>\r\n\r\n<br/><br/>\r\n<h3 id=\"sqlFunctions\">Sql Functions</h3>\r\n<pre className=\"lang-sql\">\r\n <Table striped bordered hover size=\"sm\">\r\n  <thead>\r\n    <tr>\r\n   <th align='left'>Function Name</th>\r\n   <th align='left'>Function Parameters</th>\r\n   <th align='left'>Decription</th>\r\n   </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n  <tr>\r\n   <td align='left' colSpan='3'><b>Aggregate Functions</b></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left'>Count</td>\r\n   <td align='left'>Scanned column or object of count</td>\r\n   <td align='left'>Aggregate function. Example: Count(Id)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left'>Sum</td>\r\n   <td align='left'>Scanned column or object of sum</td>\r\n   <td align='left'>Aggregate function. Example: Sum(Price)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left'>Min</td>\r\n   <td align='left'>Scanned column or object of min</td>\r\n   <td align='left'>Aggregate function. Example: Min(OrderDate)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left'>Max</td>\r\n   <td align='left'>Scanned column or object of max</td>\r\n   <td align='left'>Aggregate function. Example: Max(Number)</td>\r\n  </tr>\r\n\r\n  <tr>\r\n   <td align='left' colSpan='3'><b>Datetime Functions</b></td>\r\n  </tr>\r\n\r\n  <tr>\r\n   <td align='left' valign='top'>Today, CurDate</td>\r\n   <td align='left' valign='top'>Prm1 optional.<br/>Date or DifDay</td>\r\n   <td align='left' valign='top'>Current or different date.\r\n    <br/>Example1: <font size=\"-1\">Today()</font>\r\nExample2: <font size=\"-1\">CurDate(); --<i>Today</i></font>\r\nExample3: <font size=\"-1\">CurDate(-1); --<i>Yesterday</i></font></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>CurDateTime</td>\r\n   <td align='left' valign='top'>Prm1 optional.<br/>Date or DifDay</td>\r\n   <td align='left' valign='top'>Current or different datetime.\r\n    <br/>Example1: <font size=\"-1\">CurDateTime()</font>\r\nExample2: <font size=\"-1\">CurDateTime(-1); --<i>Yesterday time</i></font>\r\nExample3: <font size=\"-1\">CurDateTime(ATimeStamp);\r\n          --<i>ATimeStamp time by no milisecond</i></font></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>Now, CurDateTimeStamp</td>\r\n   <td align='left' valign='top'>Prm1 optional.<br/>DifDay</td>\r\n   <td align='left' valign='top'>Current or different datetime stamp.\r\n    <br/>Example1: <font size=\"-1\">Now()</font>\r\nExample2: <font size=\"-1\">CurDateTimeStamp(); --<i>Now</i></font>\r\nExample3: <font size=\"-1\">CurDateTimeStamp(-5/24); --<i>5 hour before</i></font></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left'>Year, Month, Day,<br/>Hour, Minute, Second</td>\r\n   <td align='left'>-</td>\r\n   <td align='left' valign='top'>Current Year, Month, Day, Hour, Minute, Second\r\nExample1: Year()\r\nExample2: Hour()</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>WeekDay</td>\r\n   <td align='left'>Prm1:Number,<br/>Prm2:Mod</td>\r\n   <td align='left' valign='top'>Day of Week. 1:Monday, 2:Tuesday,.. 7:Sunday\r\nExample: WeekDay()</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>DateFromStr</td>\r\n   <td align='left' valign='top'>Prm1:DateStr,<br/>Prm2:DateFormat optional</td>\r\n   <td align='left' valign='top'>Date from string\r\n    <br/>Example:<font size=\"-1\">\r\nDateFromStr('01.06.2014 10:48:23','dd.MM.yyyy HH:mm:ss')</font></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>DateDifMonth</td>\r\n   <td align='left'>Prm:DifMonth</td>\r\n   <td align='left' valign='top'>Different month date. Example: DateDifMonth(-3)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>StrFromDate</td>\r\n   <td align='left' valign='top'>Prm1:Date,<br/>Prm2:DateFormat optional</td>\r\n   <td align='left' valign='top'>String from date\r\n    <br/>Example:\r\nStrFromDate(ProductDate,'dd/MM/yyyy'),\r\nStrFromDate(Now(-7),'yyyyMMdd HH:mm:ss')\r\n   </td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>StrFromNumber</td>\r\n   <td align='left' valign='top'>Prm1:Number,<br/>Prm2:Format is optional</td>\r\n   <td align='left' valign='top'>String from number\r\n    <br/>Example:<font size=\"-1\">\r\nStrFromNumber(23419.2865, '#0.00'); --<i>Out: 23419.29</i>\r\nStrFromNumber(23419.2865, '#,##0.00'); --<i>Out: 23,419.29</i></font></td>\r\n  </tr>\r\n\r\n  <tr>\r\n   <td align='left' colSpan='3'><b>Text Functions</b></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left'>StrLen</td>\r\n   <td align='left'>Prm:Text</td>\r\n   <td align='left'>Length of text. Example: StrLen(Name)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left'>Trim</td>\r\n   <td align='left'>Prm:Text</td>\r\n   <td align='left'>Trim the text. Example: Trim(Description)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>SubStr</td>\r\n   <td align='left' valign='top'>Prm1:Text,<br/>Prm2:StartPos,<br/>Prm3:Length optional</td>\r\n   <td align='left' valign='top'>Sub string from text.\r\n    <br/>Example:\r\nSubStr(DESCRIPTION, 1, 5)\r\n   </td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left'>Upper</td>\r\n   <td align='left'>Prm:Text</td>\r\n   <td align='left'>Upper the text. Example: Upper(Surname)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left'>Lower</td>\r\n   <td align='left'>Prm:Text</td>\r\n   <td align='left'>Lower the text. Example: Lower(Address)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>InStr</td>\r\n   <td align='left'>Prm1:stSource,<br/>Prm2:stSource, stLook</td>\r\n   <td align='left' valign='top'>InStr search the stLook in stSource</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>InStrSet</td>\r\n   <td align='left' valign='top'>Prm1:stSourceSet,<br/>Prm2:stLook</td>\r\n   <td align='left' valign='top'>InStrSet search the stLook in stSourceSet\r\n    <br/>Example:\r\nInStrSet('1,3,5,7-9,11', '8')\r\n   </td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>IsNull</td>\r\n   <td align='left'>Prm1:Object,<br/>Prm2:NewValue</td>\r\n   <td align='left' valign='top'>If Object is null, use NewValue.\r\nExample: IsNull(Status, 1)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>IfValue</td>\r\n   <td align='left'>Prm1:leftValue,<br/>Prm2:condition,<br/>Prm3:rightValue,<br/>Prm4:thenValue,<br/>Prm5:elseValue</td>\r\n   <td align='left' valign='top'>IfValue check the condition, get thenValue or elseValue\r\n    <br/>Example:\r\nIfValue(OperationType, '=', '+', 'INCOME', 'EXPENSE')\r\n   </td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>CaseValue</td>\r\n   <td align='left'>Prm1:Value,<br/>Prm2:EqualValue1,<br/>Prm3:ThenValue1,<br/>[EqualValue2,ThenValue2,..]<br/>PrmN:OtherValue</td>\r\n   <td align='left' valign='top'>CaseValue check the equal values\r\nand get the then values or other value.\r\n    <br/>Example:<font size=\"-1\">\r\nCaseValue(MaleFemale, 'M', 'Male', 'F', 'Female', 'Unknown')</font></td>\r\n  </tr>\r\n\r\n  <tr>\r\n   <td align='left' colSpan='3'><b>Various Functions</b></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>Mod</td>\r\n   <td align='left'>Prm1:Number,<br/>Prm2:Mod</td>\r\n   <td align='left' valign='top'>Mod of the number. Example: Mod(Id, 3)</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>Round</td>\r\n   <td align='left'>Prm1:Number,<br/>Prm2:Precision is optional</td>\r\n   <td align='left' valign='top'>Round the number.\r\n    <br/>Example:<font size=\"-1\">\r\nRound(413.2865); --<i>413.29</i></font></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>Floor</td>\r\n   <td align='left'>Prm1:Number,<br/>Prm2:Precision is optional</td>\r\n   <td align='left' valign='top'>Floor the number.\r\n    <br/>Example:<font size=\"-1\">\r\nFloor(413.2865, 3); --<i>413.286</i></font></td>\r\n  </tr>\r\n\r\n  <tr>\r\n   <td align='left' valign='top'>BinaryFromFile</td>\r\n   <td align='left' valign='top'>Prm:Url or FileName.\r\n\r\nNote: FileName is valid\r\nfor local database.\r\n   </td>\r\n   <td align='left' valign='top'>Read the data bytes from file or url.\r\n<br/>Example:<font size=\"-1\">\r\nupdate Product\r\nset Photo = <br/>\r\nBinaryFromFile('http://www.mysite.com/Note1.png')\r\nwhere id = 1</font>\r\n   </td>\r\n  </tr>\r\n\r\n  <tr>\r\n   <td align='left' colSpan='3'><span id=\"sequenceFunctions\"></span><b>Sequence Functions</b></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>SequenceNextValue</td>\r\n   <td align='left' valign='top'>Prm: SequenceName</td>\r\n   <td align='left' valign='top'>Next Value of SequenceName.\r\nExample1: Select SequenceNextValue(SequenceName)\r\n            From _DB_Sequence\r\n           Where SequenceName = 'SEQ_ORDER_ID';\r\n\r\nExample2: Insert Into Order(Id, Desc)\r\n          Values(SequenceNextValue('SEQ_ORDER_ID'), 'Desc1');</td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>SequenceCurrentValue</td>\r\n   <td align='left' valign='top'>Prm: SequenceName</td>\r\n   <td align='left' valign='top'>Current Value of SequenceName.\r\nExample: Select SequenceCurrentValue(SequenceName)\r\n           From _DB_Sequence\r\n          Where SequenceName = 'SEQ_ORDER_ID'</td>\r\n  </tr>\r\n\r\n  <tr>\r\n   <td align='left' colSpan='3'><b>DateTime Generated Number Functions</b></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>CurDateNumber</td>\r\n   <td align='left' valign='top'>-</td>\r\n   <td align='left' valign='top'>Current date number.\r\nExample: CurDateNumber(); --<i>20150930</i></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>CurDateTimeNumber</td>\r\n   <td align='left' valign='top'>-</td>\r\n   <td align='left' valign='top'>Current date time number.\r\nExample: CurDateTimeNumber(); --<i>20150930115213</i></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>CurTimeNumber</td>\r\n   <td align='left' valign='top'>-</td>\r\n   <td align='left' valign='top'>Current time number.\r\nExample: CurTimeNumber(); --<i>115306</i></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>CurDateTimeStampNumber</td>\r\n   <td align='left' valign='top'>-</td>\r\n   <td align='left' valign='top'>Current date time stamp number.\r\nExample: CurDateTimeStampNumber(); --<i>20151001141304673</i></td>\r\n  </tr>\r\n  <tr>\r\n   <td align='left' valign='top'>CurTimeStampNumber</td>\r\n   <td align='left' valign='top'>-</td>\r\n   <td align='left' valign='top'>Current time stamp number.\r\nExample: CurTimeStampNumber(); --<i>140330215</i></td>\r\n  </tr>\r\n  </tbody>\r\n  </Table>\r\n</pre>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserGuide;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"Download\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\nclass Download extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (debugEnabled)\r\n      consoleLog(\"constructor\");\r\n  }\r\n\r\n  /*?\r\n  componentDidMount() {\r\n    if (debugEnabled)\r\n      consoleLog(\"componentDidMount\");\r\n  }\r\n  */\r\n\r\n  //prev? <div className=\"row text-center\">\r\n\r\n  render() {\r\n    if (debugEnabled)\r\n      consoleLog(\"render\");\r\n\r\n    return (\r\n      <div>\r\n   <h2>SelimSql Download</h2>\r\n\r\n   SelimSql presents the following applications for free download:\r\n   <br/>\r\n\r\n\t<div id=\"SSqlDeveloper\"/>\r\n    <Table striped bordered hover>\r\n    <thead>\r\n     <tr>\r\n      <th align='center'>Application</th>\r\n      <th align='center'>Operating System</th>\r\n      <th align='left'>Description</th>\r\n      <th align='left'>Download File</th>\r\n     </tr>\r\n   </thead>\r\n\r\n   <tbody>\r\n    <tr>\r\n     <td align='center'><font size='-1' color='navy'><b>Sql Developer Tool <br/> + <br/>Jdbc Connection Driver</b></font></td>\r\n     <td align='center'>All</td>\r\n     <td>\r\n     This tool can be used to manage selimsql database and execute sql statements.\r\n     <br/><br/>\r\n     </td>\r\n\r\n     <td>\r\n     <br/>\r\n     <a href=\"setup/SSqlDevClient1.3.1.zip\">SSqlDevClient1.3.1.zip</a>\r\n     <br/><br/>\r\n\r\n\t <font size='-1' color='green'>\r\n     (<u>Note:</u>\r\n     Download this zip file to a directory(for example: \"/SSqlDevClient\").\r\n\t Extract zip file in your directory and double click \"SSqlDevClient.jar\" which is runnable java application.\r\n\r\n     <br/><br/>\r\n\t This application is expected to be run, if your jre version has no problem.\r\n\t However, you have double clicked the \"SSqlDevClient.jar\",\r\n\t <br/> if it has not run, start it by double clicking the file named \"SSqlDevClient.bat\" (for Windows) or \"SSqlDevClient.sh\" (for Linux))\r\n     </font>\r\n     <br/><br/>\r\n\r\n     </td>\r\n    </tr>\r\n\r\n    <tr id=\"selimSqlDriver\">\r\n     <td align='center'><font size='-1' color='navy'><b>Jdbc Connection Driver</b></font></td>\r\n     <td align='center'>All</td>\r\n     <td>\r\n     This driver can be used to connect selimsql database and execute sql statements.\r\n     <br/><br/>\r\n     </td>\r\n     <td><a href=\"setup/lib/selimSql-1.3.1.jar\">selimSql-1.3.1.jar</a></td>\r\n    </tr>\r\n\r\n    {\r\n    /* LATER?\r\n    <tr>\r\n     <td align='center'><font size='-1' color='navy'><b>SSql Database Server</b></font></td>\r\n     <td align='center'>Windows</td>\r\n     <td width='45%'>\r\n     This application can be used to host SelimSql databases.<br/>\r\n     You can collect databases to jointly access on your home or business computer.<br/>\r\n\t So, you can connect to this server as client from other computers.<br/><br/>\r\n     Also you can access this server from android mobile phone or tablet.\r\n     </td>\r\n     <td><a href=\"setup/SSqlDbServer12_windows_setup.exe\">SSqlDbServer12_windows_setup.exe</a></td>\r\n    </tr>\r\n    */\r\n    }\r\n\r\n    <tr>\r\n     <td align='center'><font size='-1' color='navy'><b>SSql Database Server</b></font></td>\r\n     <td align='center'>All</td>\r\n     <td align='center'>\r\n     <br/>...Same description with previous...<br/><br/><br/>\r\n     <img border=\"0\" width=\"80%\" height=\"80%\" src=\"images/DbServerClients.png\" alt=\"DbServerClients\"/>\r\n     <br/><br/>\r\n     </td>\r\n\r\n     <td>\r\n     <br/>\r\n     <a href=\"setup/SSqlDbServer1.3.1.zip\">SSqlDbServer1.3.1.zip</a>\r\n     <br/><br/>\r\n\r\n\t <font size='-1' color='green'>\r\n     (<u>Note:</u>\r\n   Download this zip file to a directory(for example: \"/SSqlDbServer\").\r\n\r\n   <br/><br/>\r\n   Extract zip file in your directory and double click \"SSqlDbServer.jar\" which is runnable java application.\r\n   <br/><br/>\r\n   This application is expected to be run, if your jre version has no problem.\r\n   <br/>\r\n   However, you have double clicked the \"SSqlDbServer\",<br/>\r\n   if it has not run, start it by double clicking the file named \"SSqlDbServer.bat\" (for Windows) or \"SSqlDbServer.sh\" (for Linux))\r\n      </font>\r\n     </td>\r\n    </tr>\r\n\r\n\r\n    <tr>\r\n     <td align='center'><font size='-1' color='navy'><b>SSqlDbAdmin</b></font></td>\r\n     <td align='center'>Android<br/><br/>(Mobile Phone, Tablet)</td>\r\n     <td>\r\n     This application is a database manager for android.<br/>\r\n     With your android phone or tablet:<br/>\r\n     -Build/drop database on your SD card.<br/>\r\n\t -Build/drop table with 10 types of column.<br/>\r\n\t -Build/drop index of tables.<br/>\r\n\t -Admin databases, tables, columns and indexes.<br/>\r\n\t -Insert, update, delete, show records.<br/>\r\n\t -Select sql helper for query tables.<br/>\r\n\t -Save and load sql statements for reuse...<br/>\r\n     <br/><br/>\r\n     </td>\r\n     <td><a href=\"https://play.google.com/store/apps/details?id=selimsql.android\">SSqlDbAdmin.apk</a></td>\r\n    </tr>\r\n\r\n\r\n    <tr id=\"selimSqlAndroidDriver\">\r\n     <td align='center'>\r\n     \t<font size='-1' color='navy'><b>SSql Android DbDriver</b></font>\r\n     </td>\r\n     <td align='center'>Android</td>\r\n\r\n     <td>\r\n\t This driver can be used to manage SelimSql database on local disk and connect to db server for Android applications.\r\n\t <br/><br/>\r\n\t Android developers can use this library by including \"libs\" directory of their applications.\r\n\t <a href=\"ssqldbadmin-android#selimSqlAndroidDriver\">Look at for detail.</a>\r\n     <br/><br/>\r\n     </td>\r\n     <td><a href=\"setup/lib/selimSqlAndroid-1.3.1.jar\">selimSqlAndroid-1.3.1.jar</a></td>\r\n    </tr>\r\n    </tbody>\r\n    </Table>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Download;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"Java\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\nclass Java extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (debugEnabled)\r\n      consoleLog(\"constructor\");\r\n  }\r\n\r\n  /*?\r\n  componentDidMount() {\r\n    if (debugEnabled)\r\n      consoleLog(\"componentDidMount\");\r\n  }\r\n  */\r\n\r\n  render() {\r\n    if (debugEnabled)\r\n      consoleLog(\"render\");\r\n\r\n    return (\r\n      <div>\r\n        <h2>Java</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Java;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"Android\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\nclass Android extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (debugEnabled)\r\n      consoleLog(\"constructor\");\r\n  }\r\n\r\n  /*?\r\n  componentDidMount() {\r\n    if (debugEnabled)\r\n      consoleLog(\"componentDidMount\");\r\n  }\r\n  */\r\n\r\n  render() {\r\n    if (debugEnabled)\r\n      consoleLog(\"render\");\r\n\r\n    return (\r\n      <div>\r\n       <h2>Android</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Android;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"Contact\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\nclass Contact extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (debugEnabled)\r\n      consoleLog(\"constructor\");\r\n  }\r\n\r\n  /*?\r\n  componentDidMount() {\r\n    if (debugEnabled)\r\n      consoleLog(\"componentDidMount\");\r\n  }\r\n  */\r\n\r\n  render() {\r\n    if (debugEnabled)\r\n      consoleLog(\"render\");\r\n\r\n    return (\r\n      <div>\r\n        <h2>SelimSql Contact</h2>\r\n        <p>\r\n        For your requests, questions and suggestions, send email to <a href=\"mailto:selimsqldb@gmail.com\">selimsqldb@gmail.com</a>.\r\n        </p>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, {Component} from \"react\";\r\n//import {Link} from \"react-router-dom\";\r\n\r\nimport { HOME } from \"../util/Config\";\r\n\r\nclass NotFound extends Component {\r\n\r\n    render() {\r\n        return (<div className=\"col-md-10\">\r\n            <div className=\"error-template\">\r\n                <h1>Page not found!</h1>\r\n                <h4>Detail: 404 Not Found</h4>\r\n                <div className=\"error-actions\">\r\n                    <a href={HOME} className=\"btn btn-primary btn-lg\">\r\n                        <span className=\"glyphicon glyphicon-home\"/>\r\n                        &nbsp;Goto Main Page</a>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\n//import { NavDropdown } from \"react-bootstrap\";\r\n//import NavbarToggle from \"react-bootstrap/esm/NavbarToggle\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n//import { NavLink } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//import { NavDropdown } from \"react-bootstrap\";\r\nimport { ButtonGroup, DropdownButton, Dropdown } from \"react-bootstrap\";\r\n\r\nimport { FE_APP_VERSION } from \"../../util/Constant\";\r\n//!? import params from \"../../public/data/params.json\";\r\n\r\n//import { setLinksNEXTForBreadcrumbOnCACHE } from \"../../action/CachedDataAction\";\r\n\r\n//import { fetchCurrentUser } from \"../../action/UserAction\";\r\n\r\n//import * as toast from \"./Toaster\";\r\n\r\n//import toastErrorFix from \"../../util/ToastError\";\r\n\r\n//import { HOME, HOME_INDEX, TABLELIST, COLUMNLIST, INDEXLIST } from \"../../util/Config\";\r\n\r\nimport { HOME, HOME_INDEX, USERGUIDE, DOWNLOAD, JAVA, ANDROID, CONTACT } from \"../../util/Config\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"! NavBarTop\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\n\r\nclass NavBarTop extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this.NAV_TOP_HEIGHT = null; //Unknown at first!\r\n        this.SCROLLPOS_YPREV = 0;\r\n\r\n        this._canMount = true; //TODO? Necessity!\r\n        if (debugEnabled)\r\n            consoleLog(\"constructor.props:\" + (props ? \"+EXIST\" : \"!ABSENT\") + \", context:\" + (context ? \"+EXIST\" : \"!ABSENT\"));\r\n\r\n        //topBarVisibleStatus; 2:ShowTop1+Top2; 1:ShowTop2 only\r\n        this.state = {\r\n            currentUser: null,\r\n            //linksNEXT: null\r\n            topBarVisibleStatus: 2\r\n        }\r\n\r\n        //? this.context = context;\r\n        //+ this.transitToPageBinded = this.transitToPage.bind(this);\r\n    }\r\n\r\n\r\n    //TODO? Executed at first!\r\n    componentDidMount() {\r\n        if (debugEnabled)\r\n            consoleLog(\"componentDidMount._canMount:\" + this._canMount + \", SCROLLPOS_YPREV:\" + this.SCROLLPOS_YPREV + \", topBarVisibleStatus:\" + this.state.topBarVisibleStatus);\r\n\r\n        if (this._canMount) {\r\n            //USED for NavBarTop to hide or visible on scrolls!\r\n            window.addEventListener(\"scroll\", this.handleScroll);\r\n            //! Link.addEventListener(\"click\", this.linkClick);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._canMount = false;\r\n        if (debugEnabled)\r\n            consoleLog(\"componentWillUnmount_canMount:\" + this._canMount);\r\n\r\n        window.removeEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n\r\n    fixNAV_TOP_HEIGHT = () => {\r\n        if (this.NAV_TOP_HEIGHT == null) {\r\n            this.NAV_TOP_HEIGHT = this.outerHeight(document.getElementById(\"divNavTop\"));\r\n        }\r\n\r\n        return this.NAV_TOP_HEIGHT;\r\n    }\r\n\r\n    outerHeight = (elm) => {\r\n        const height = elm.offsetHeight; //110\r\n        const style = getComputedStyle(elm);\r\n\r\n        const marginTopBottom = parseInt(style.marginTop) + parseInt(style.marginBottom); //0\r\n        const ohTotal = (height + marginTopBottom);\r\n        if (debugEnabled)\r\n            consoleLog(\"outerHeight; height:\" + height + \", marginTopBottom:\" + marginTopBottom + \", ohTotal:\" + ohTotal);\r\n\r\n        return ohTotal; //110\r\n    }\r\n\r\n  // Hide or show the menu.\r\n  handleScroll = () => {\r\n    const scrollPosYNEW = window.pageYOffset;\r\n    const topBarVisibleStatusPREV = this.state.topBarVisibleStatus;\r\n    // if (debugEnabled)\r\n    //    consoleLog(\"handleScroll; SCROLLPOS_YPREV:\" + this.SCROLLPOS_YPREV + \", topBarVisibleStatusPREV:\" + topBarVisibleStatusPREV + \", scrollPosYNEW:\" + scrollPosYNEW);\r\n\r\n    const NAV_TOP_HEIGHT = this.fixNAV_TOP_HEIGHT();\r\n    const scrollDOWN = (scrollPosYNEW > this.SCROLLPOS_YPREV);\r\n    let topBarVisibleStatusNEW;\r\n    //PREV: if (scrollPosYNEW > NAV_TOP_HEIGHT) {\r\n    if (scrollPosYNEW > ( 4 * NAV_TOP_HEIGHT)) {\r\n        topBarVisibleStatusNEW = (scrollDOWN ? 0 : 1);\r\n    }\r\n    else\r\n    //PREV: if (scrollPosYNEW > (NAV_TOP_HEIGHT / 2)) {\r\n    if (scrollPosYNEW > NAV_TOP_HEIGHT) {\r\n        topBarVisibleStatusNEW = (scrollDOWN ? 1 : 2);\r\n    }\r\n    else {\r\n        topBarVisibleStatusNEW = 2;\r\n    }\r\n\r\n    // if (debugEnabled)\r\n    //    consoleLog(\">scrollDOWN:\" + scrollDOWN + \", topBarVisibleStatusNEW:\" + topBarVisibleStatusNEW);\r\n\r\n    this.SCROLLPOS_YPREV = scrollPosYNEW;\r\n\r\n    if (topBarVisibleStatusPREV === topBarVisibleStatusNEW) {\r\n        // if (debugEnabled)\r\n        //    consoleLog(\"NO_NEED to render NavBarTOP!\");\r\n        return;\r\n    }\r\n\r\n    this.setState({\r\n      topBarVisibleStatus: topBarVisibleStatusNEW\r\n    });\r\n  };\r\n\r\n  /*\r\n  linkClick = (link) => {\r\n      // if (debugEnabled)\r\n            consoleLog(\"linkClick.link: \" + link);\r\n\r\n      //onClick={this.props.gotoLink}\r\n\r\n      //window.location = link; //Forces to refresh page!\r\n      //TypeError: Cannot read property 'push' of undefined\r\n      this.props.history.push(link); //Goto LINK!\r\n    }\r\n    */\r\n\r\n/*TODO,l?\r\n    logout = () => {\r\n        if (debugEnabled)\r\n            consoleLog(\"logout\");\r\n\r\n        //closeUserOnSession(this.responseLogoutSuccess, this.responseLogoutError);\r\n    }\r\n*/\r\n\r\n/*\r\n    responseCurrentUser = (curUser) => {\r\n        if (debugEnabled)\r\n            consoleLog(\"responseCurrentUser._canMount:\" + this._canMount + \", \" + (this._canMount ? \"+PROCESS\" : \"!SKIP\"));\r\n\r\n        if (this._canMount) {\r\n            //TODO? Useless!\r\n            //const linksNEXT = getLinksNEXTForBreadcrumbOnCACHE();\r\n            //this.setState({ currentUser: curUser, linksNEXT: linksNEXT });\r\n            this.setState({ currentUser: curUser });\r\n        }\r\n    }\r\n*/\r\n\r\n\r\n    render() {\r\n        //const curUser = this.state.currentUser;\r\n        //const curUserId = (curUser ? curUser.id : null);\r\n        const topBarVisibleSTATUS = this.state.topBarVisibleStatus;\r\n        //const divClassName  = (topBarVisibleSTATUS > 0  ? \"sticky-top\" : \"d-none\"); //PRB for scrollPosY update recursives RENDER!\r\n        //const divClassName  = (topBarVisibleSTATUS > 0  ? \"fixed-top\" : \"invisible\");\r\n        const nav1ClassName = (topBarVisibleSTATUS >= 2 ? \"visible\" : \"d-none\");\r\n        const nav2ClassName = (topBarVisibleSTATUS >= 1 ? \"visible\" : \"d-none\");\r\n        //if (debugEnabled) {\r\n        //    consoleLog(\"render.topBarVisibleSTATUS:\" + topBarVisibleSTATUS + \", nav1ClassName:\" + nav1ClassName + \", nav2ClassName:\" + nav2ClassName);\r\n        //}\r\n\r\n/*TODO?\r\n.visible {\r\n  visibility: visible !important;\r\n}\r\n\r\n.invisible {\r\n  visibility: hidden !important;\r\n}\r\n\r\n.d-none {\r\n  display: none !important;\r\n}\r\n*/\r\n        //const navbarBgColor = { backgroundColor: \"darkcyan\" };\r\n        //p1:darkslategray, //p2:darkcyan\r\n        //const navbarBgColor = { backgroundColor: \"darkcyan\" };\r\n\r\n/*TODO Link examples:\r\n<Link to=\"/courses?sort=name\" />\r\nto: object\r\nAn object that can have any of the following properties:\r\n\r\npathname: A string representing the path to link to.\r\nsearch: A string representation of query parameters.\r\nhash: A hash to put in the URL, e.g. #a-hash.\r\nstate: State to persist to the location.\r\n<Link\r\n  to={{\r\n    pathname: \"/courses\",\r\n    search: \"?sort=name\",\r\n    hash: \"#the-hash\",\r\n    state: { fromDashboard: true }\r\n  }}\r\n/>\r\n\r\nto: function\r\nA function to which current location is passed as an argument and which should return location representation as a string or as an object\r\n\r\n<Link to={location => ({ ...location, pathname: \"/courses\" })} />\r\n<Link to={location => `${location.pathname}?sort=name`} />\r\n*/\r\n\r\n        const gotoLink = this.props.gotoLink;\r\n\r\n        const styleBtn = { marginRight:\"15px\" }; //? height:\"35px\"\r\n        const styleDdItemMargins = { marginLeft:\"15px\", marginTop:\"5px\", marginBottom:\"0px\", padding:\"0px\" }; //TODO? or use className=\"offset-1\", offset-2\r\n\r\n        //OK: <Navbar.Text className=\"text-warning\", \"text-light\"\r\n        /*PREV:\r\n        <Navbar className={nav1ClassName} variant=\"dark\" bg=\"info\">\r\n            <Navbar.Brand>SelimSql</Navbar.Brand>\r\n            <Navbar.Text>Database Management System</Navbar.Text>\r\n        </Navbar>\r\n        */\r\n\r\n        //TODO? table-borderless, table-bordered, .table-dark\r\n        //<div className={nav1ClassName + \" container-fluid p-1 bg-info\"}>\r\n        return (\r\n         <div id=\"divNavTop\" className=\"fixed-top\">\r\n            <div className={nav1ClassName + \" container-fluid p-1 bg-info\"}>\r\n                <table className=\"table table-borderless\">\r\n                  <tbody>\r\n                   <tr>\r\n                    <td className=\"text-white\" style={{ verticalAlign:\"middle\", fontSize:\"2rem\", width:\"15%\" }}>SelimSql</td>\r\n                    <td className=\"text-white-50\" style={{ verticalAlign:\"middle\", fontSize:\"1.5rem\" }}>Database Management System</td>\r\n                    <td className=\"text-muted\" style={{ verticalAlign:\"middle\", fontSize:\"1rem\", width:\"10%\" }}>{FE_APP_VERSION}</td>\r\n                   </tr>\r\n                  </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <Navbar className={nav2ClassName} collapseOnSelect expand=\"md\" variant=\"dark\" style={{ backgroundColor: \"darkcyan\" }}>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                      <Link to={HOME} onClick={() => gotoLink(HOME)} style={styleBtn} alt=\"SelimSql\">\r\n                        <img src=\"/images/SSqlDbLogo36.png\" className=\"logo-img img-circle img-responsive\" alt=\"SSqlDbLogo36\"/>\r\n                      </Link>\r\n\r\n                      <Link to={HOME} onClick={() => gotoLink(HOME)}><Button variant=\"info\" style={styleBtn}>Main</Button></Link>\r\n\r\n                      <Link to={USERGUIDE} onClick={() => gotoLink(USERGUIDE)}><Button variant=\"info\" style={styleBtn}>User Guide</Button></Link>\r\n                      <Link to={DOWNLOAD} onClick={() => gotoLink(DOWNLOAD)}><Button variant=\"info\" style={styleBtn}>Download</Button></Link>\r\n\r\n                      <Link to={JAVA} onClick={() => gotoLink(JAVA)}><Button variant=\"success\" style={styleBtn}>Java</Button></Link>\r\n                      <Link to={ANDROID} onClick={() => gotoLink(ANDROID)}><Button variant=\"success\" style={styleBtn}>Android</Button></Link>\r\n\r\n                      <Link to={CONTACT} onClick={() => gotoLink(CONTACT)}><Button variant=\"info\" style={styleBtn}>Contact</Button></Link>\r\n\r\n                      <DropdownButton as={ButtonGroup} title=\"SSql\" variant=\"info\" style={styleBtn}>\r\n                        <p style={styleDdItemMargins}><Link to={USERGUIDE} onClick={() => gotoLink(USERGUIDE)}>User Guide</Link></p>\r\n                        <p style={styleDdItemMargins}><Link to={DOWNLOAD} onClick={() => gotoLink(DOWNLOAD)}>Download</Link></p>\r\n                        <Dropdown.Divider/>\r\n                        <p style={styleDdItemMargins}><Link to={HOME_INDEX} onClick={() => gotoLink(HOME_INDEX)}>Home Index</Link></p>\r\n                      </DropdownButton>\r\n                  </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </div>);\r\n    }//render\r\n}\r\n\r\nexport default NavBarTop;\r\n","export const FE_APP_VERSION = \"FEv1.01\";\r\n\r\n//export const STATUS = \"STATUS\";\r\n\r\n//export const YES_NO = \"YES_NO\";\r\n","//ref: D:\\FrontEnd\\webApp\\SpBoot158_REST_HibernateJPA_ManyTable_ReactBootstrap_SSql__GOOD_SAMPLE__FRONTEND__READONLY\\src\\component\\Static\\SideBar.js\r\n\r\nimport React, {Component} from \"react\";\r\n\r\nimport { Form, FormControl } from \"react-bootstrap\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"! SideBarLeft\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\n/*\r\n<div class=\"container-fluid\">\r\n <div class=\"row flex-xl-nowrap\">\r\n  <div id=\"sidebar-left\" class=\"col-12 col-md-3 col-xl-2\" style=\"background-color: lightgreen;\">\r\n   sidebar-left; class=col-12 col-md-3 col-xl-2\r\n  </div>\r\n*/\r\n\r\nclass SideBarLeft extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        if (debugEnabled)\r\n            consoleLog(\"constructor.props:\" + (props ? \"+EXIST\" : \"!ABSENT\") + \", context:\" + (context ? \"+EXIST\" : \"!ABSENT\"));\r\n\r\n        /*?\r\n        this.state = {\r\n            show: false,\r\n            active: getActiveMenuFromSessionStorage()\r\n        };\r\n\r\n        this.context = context;\r\n        this.logout = this.logout.bind(this);\r\n        this.closeMenu = this.closeMenu.bind(this);\r\n        */\r\n    }\r\n\r\n/*\r\n    logout() {\r\n        if (debugEnabled)\r\n            consoleLog(\"logout\");\r\n\r\n        removeTokenFromSessionStorage();\r\n\r\n        //PREV: window.location = '/login';\r\n        //window.location = '/'; //Goto HOME:index.html page and then goto /login page!\r\n        window.location = HOME_INDEX_HTML; //HOME_PAGE goto index.jsp and waits to pass to index.html.\r\n    }\r\n\r\n\r\n    closeMenu = (event) => {\r\n        const eventText = event.target.text;\r\n        if (debugEnabled)\r\n            consoleLog(\"closeMenu.eventText: \" + eventText);\r\n\r\n        this.setState({ show: false,\r\n                        active: eventText });\r\n\r\n        setActiveMenuToSessionStorage(eventText);\r\n    }\r\n*/\r\n\r\n/*TODO? FYS:\r\n    canView = (path) => {\r\n        if (debugEnabled)\r\n            console.log(\"SideBar.canView.path:\" + path);\r\n\r\n        let listPermission = this.props.currentUser.listPermission;\r\n        //return listPermission ? listPermission.includes(path) : false;\r\n        return true;\r\n    }\r\n*/\r\n\r\n/*PREV:\r\n    render() {\r\n        const showMenu = this.state.show;\r\n        if (debugEnabled)\r\n            consoleLog(\"render.showMenu:\" + showMenu);\r\n\r\n        const activeMenu = this.state.active;\r\n        return (\r\n            <Menu width={'300px'} styles={stylesMenu} isOpen={showMenu}>\r\n                <div className=\"navbar-collapse\">\r\n                    <ul className=\"nav in\" id=\"side-menu\">\r\n                        <li>\r\n                            <a className=\"pointer\"><i className=\"fa fa-bar-chart-o fa-fw\"/> Kullanıcı İşlemleri<span className=\"fa arrow\"/></a>\r\n                            <ul className=\"nav nav-second-level\">\r\n                                <li>\r\n                                    <Link className={activeMenu === 'Kullanıcı İşlemleri' ? 'active-menu' : '' } to={USERS_PAGE} onClick={this.closeMenu}>Kullanıcı İşlemleri</Link>\r\n                                </li>\r\n\r\n                                <li>\r\n                                    <Link className={activeMenu === 'Roller' ? 'active-menu' : ''} to={ROLES_PAGE} onClick={this.closeMenu}>Roller</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <a className=\"pointer\"><i className=\"fa fa-bar-chart-o fa-fw\"/> Sistem Yönetimi<span className=\"fa arrow\"/></a>\r\n                            <ul className=\"nav nav-second-level\">\r\n                                <li>\r\n                                    <Link className={activeMenu === 'Sistem Parametreleri' ? 'active-menu' : ''} to={PARAMETERS_PAGE} onClick={this.closeMenu}>Sistem Parametreleri</Link>\r\n                                </li>\r\n\r\n                                <li>\r\n                                    <Link className={activeMenu === 'Kodlu Bilgiler' ? 'active-menu' : ''} to={CODES_PAGE} onClick={this.closeMenu}>Kodlu Bilgiler</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <a onClick={this.logout} className=\"pointer\">Çıkış <i className=\"fa fa-sign-out\" aria-hidden=\"true\"/></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </Menu>\r\n        );\r\n    }//render\r\n    */\r\n\r\n    render() {\r\n        if (debugEnabled)\r\n            consoleLog(\"render\");\r\n\r\n        const param = this.props.param;\r\n        const paramTitle = ( param == null ? null : param.title);\r\n        let divContent = null;\r\n        if (paramTitle) {\r\n            //TODO? Abort prb! mr-sm-2\r\n            divContent = (<Form inline>\r\n                        <p>{paramTitle}</p>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\r\n                        <Button variant=\"outline-info\">Search</Button>\r\n                    </Form>);\r\n        }\r\n\r\n        return (\r\n          <div style={{ paddingTop: 5 }}>\r\n            {divContent}\r\n          </div>);\r\n    }\r\n}\r\n\r\n/*PREV\r\nconst stylesMenu = {\r\n    bmBurgerButton: {\r\n        position: 'fixed',\r\n        width: '36px',\r\n        height: '30px',\r\n        left: '72px',\r\n        top: '11px'\r\n    },\r\n    bmBurgerBars: {\r\n        background: '#373a47'\r\n    },\r\n    bmCrossButton: {\r\n        height: '24px',\r\n        width: '24px'\r\n    },\r\n    bmCross: {\r\n        background: '#bdc3c7'\r\n    },\r\n    bmMenu: {\r\n        background: '#373a47',\r\n        paddingTop: '2.5em',\r\n        fontSize: '1.15em'\r\n    },\r\n    bmMorphShape: {\r\n        fill: '#373a47'\r\n    },\r\n    bmItemList: {\r\n        color: '#b8b7ad',\r\n        padding: '0.2em'\r\n    },\r\n    bmOverlay: {\r\n        background: 'rgba(0, 0, 0, 0.3)'\r\n    }\r\n}\r\n*/\r\n\r\nexport default SideBarLeft;\r\n","import React, {Component} from \"react\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"! SideBarRight\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\n/*\r\n<div class=\"container-fluid\">\r\n <div class=\"row flex-xl-nowrap\">\r\n  <SideBarLeft>..\r\n  <LinkPage>..\r\n\r\n  <div id=\"sidebar-right\" class=\"d-none d-xl-block col-xl-3\" style=\"background-color:lightgray;\">\r\n      sidebar-right; class=d-none d-xl-block col-xl-3\r\n  </div>\r\n*/\r\n\r\nclass SideBarRight extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        if (debugEnabled)\r\n            consoleLog(\"constructor.props:\" + (props ? \"+EXIST\" : \"!ABSENT\") + \", context:\" + (context ? \"+EXIST\" : \"!ABSENT\"));\r\n\r\n        /*?\r\n        this.state = {\r\n            show: false,\r\n            active: getActiveMenuFromSessionStorage()\r\n        };\r\n\r\n        this.context = context;\r\n        this.logout = this.logout.bind(this);\r\n        this.closeMenu = this.closeMenu.bind(this);\r\n        */\r\n    }\r\n\r\n\r\n    render() {\r\n        if (debugEnabled)\r\n            consoleLog(\"render\");\r\n\r\n        const param = this.props.param;\r\n        const paramTitle = ( param == null ? null : param.title);\r\n        let divContent = null;\r\n        if (paramTitle) {\r\n            divContent = (<span>{paramTitle}</span>);\r\n        }\r\n\r\n        return (\r\n            <div style={{ paddingTop: 5 }}>\r\n                {divContent}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default SideBarRight;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Navbar } from \"react-bootstrap\";\r\n//import { Nav, NavDropdown } from \"react-bootstrap\";\r\n//import { Button } from \"react-bootstrap\";\r\n\r\n//import { NavLink } from \"react-router-dom\";\r\n//import { Link } from \"react-router-dom\";\r\n\r\n//import { HOME, HOME_INDEX, USERGUIDE, DOWNLOAD, JAVA, ANDROID, CONTACT } from \"../../util/Config\";\r\nimport { HOME } from \"../../util/Config\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"! NavBarBottom\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\n/*\r\n<footer class=\"container-fluid\">footer</footer>\r\n*/\r\n\r\nclass NavBarBottom extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this._canMount = true; //TODO? Necessity!\r\n        if (debugEnabled)\r\n            consoleLog(\"constructor.props:\" + (props ? \"+EXIST\" : \"!ABSENT\") + \", context:\" + (context ? \"+EXIST\" : \"!ABSENT\"));\r\n\r\n        //this.state = { }\r\n    }\r\n\r\n\r\n    //TODO? Executed at first!\r\n    componentDidMount() {\r\n        if (debugEnabled)\r\n            consoleLog(\"componentDidMount._canMount:\" + this._canMount);\r\n\r\n        //TODO?\r\n        if (this._canMount) {\r\n            //fetchCurrentUser(this.responseCurrentUser);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._canMount = false;\r\n        if (debugEnabled)\r\n            consoleLog(\"componentWillUnmount_canMount:\" + this._canMount);\r\n    }\r\n\r\n\r\n    render() {\r\n        if (debugEnabled)\r\n            consoleLog(\"render_canMount:\" + this._canMount);\r\n\r\n        //TODO? <div className=\"sticky-bottom\">..</div>\r\n\r\n        //const styleBtn = { margin:3, height:40 };\r\n\r\n//p1:darkslategray, //p2:darkcyan\r\n\r\n/* ref bottom panel1:\r\nAbout Mkyong.com\r\nMkyong.com is providing Java and Spring tutorials and code snippets since 2008. All published articles are simple and easy to understand and well tested in our development environment.\r\n\r\nSource code in Mkyong.com is licensed under the MIT License, read this Code License.\r\n\r\nPLAIN-TEST+\r\n<div className=\"container-fluid\" style={{background: \"yellow\"}}>\r\n    footer\r\n</div>\r\n*/\r\n\r\n/*PREV?\r\n    <Navbar variant=\"dark\" style={{ backgroundColor: \"darkcyan\" }}>\r\n       <Navbar.Brand href={HOME}>SelimSql</Navbar.Brand>\r\n       <Navbar.Text>Database Management System</Navbar.Text>\r\n    </Navbar>\r\n\r\n    <Navbar variant=\"dark\" style={{ backgroundColor: \"darkslategray\" }}>\r\n       <p style={{ textAlign:\"right\", fontSize:\"xSmall\" }}>Copyright &copy; 2009 - 2020 SelimSql | Privacy Policy</p>\r\n    </Navbar>\r\n*/\r\n//+? className=\"justify-content-between\"\r\n        return (\r\n          <div>\r\n            <Navbar variant=\"dark\" className=\"justify-content-center\" style={{ backgroundColor: \"darkcyan\" }}>\r\n                <Navbar.Brand href={HOME}>SelimSql</Navbar.Brand>\r\n                <Navbar.Text className=\"text-warning\">&copy; Copyright 2009 - 2020  |  Privacy Policy</Navbar.Text>\r\n            </Navbar>\r\n          </div>);\r\n    }//render\r\n}\r\n\r\nexport default NavBarBottom;\r\n","import React, { Component } from \"react\";\r\n\r\n//import { FE_APP_VERSION } from \"../util/Constant\";\r\n\r\nimport MainPage from \"./MainPage\";\r\nimport UserGuide from \"./UserGuide\";\r\nimport Download from \"./Download\";\r\n\r\nimport Java from \"./Java\";\r\nimport Android from \"./Android\";\r\nimport Contact from \"./Contact\";\r\n\r\nimport NotFound from \"./NotFound\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport NavBarTop from \"../component/Static/NavBarTop\";\r\n\r\nimport SideBarLeft from \"../component/Static/SideBarLeft\";\r\nimport SideBarRight from \"../component/Static/SideBarRight\";\r\n\r\nimport NavBarBottom from \"../component/Static/NavBarBottom\";\r\n\r\n//import { fetchAppVersion } from \"../action/AuthAction\";\r\n\r\nimport { HOME, HOME_INDEX, USERGUIDE, DOWNLOAD, JAVA, ANDROID, CONTACT } from \"../util/Config\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"../util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"! Dashboard\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        this._canMount = true;\r\n        if (debugEnabled)\r\n            consoleLog(\"constructor.props:\" + (props ? \"+EXIST\" : \"!ABSENT\") + \", context:\" + (context ? \"+EXIST\" : \"!ABSENT\"));\r\n\r\n        const link = this.fixWindowLocation();\r\n        this.state = {\r\n            pageLink: link\r\n        };\r\n    \r\n        /*TODO?\r\n        this.state = {\r\n            //appVersion: null\r\n            appVersion: 1.0\r\n        }\r\n        */\r\n\r\n        //? this.context = context;\r\n    }\r\n\r\n    fixWindowLocation = () => {\r\n        // if (debugEnabled)\r\n        //    consoleLog(\"fixWindowLocation\");\r\n    \r\n        const wloc = (window == null ? null : window.location);\r\n        consoleLog(\"wloc:\" + wloc);\r\n    \r\n        //const ploc = props.location;\r\n        // if (debugEnabled)\r\n        //   consoleLog(\"ploc:\" + ploc);\r\n    \r\n        const wlpathname = (wloc == null ? null : wloc.pathname);\r\n        // if (debugEnabled)\r\n        //   consoleLog(\"wlpathname:\" + wlpathname);\r\n    \r\n        if (debugEnabled) {\r\n            const wlsearch = (wloc == null ? null : wloc.search);\r\n            consoleLog(\"wlsearch:\" + wlsearch);\r\n        }\r\n\r\n        return wlpathname;\r\n    }\r\n  \r\n/*prb!?\r\n    gotoLink = (event) => {\r\n      const srcElm = (event==null ? null : event.target);\r\n      const srcTo = (srcElm == null ? null : srcElm.to);\r\n      // if (debugEnabled)\r\n        consoleLog(\"gotoLink.srcTo: \" + srcTo);\r\n        ..\r\n    }\r\n*/\r\n\r\n    gotoLink = (link) => {\r\n       if (debugEnabled)\r\n          consoleLog(\"gotoLink.link: \" + link);\r\n\r\n       //TODO? After onclick prb on refresh win.loc!\r\n       //const linkWin = this.fixWindowLocation();\r\n       // if (debugEnabled)\r\n       //   consoleLog(\"->fixWindowLocation: \" + linkWin);\r\n\r\n       //window.location = link; //force to go to link seperately!\r\n       //this.props.history.push(link);\r\n\r\n       this.setState({ pageLink: link });\r\n    }\r\n\r\n\r\n    /*TODO?\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        const collapsedLast = this.state.collapsed;\r\n        if (debugEnabled)\r\n            consoleLog(\"toggle.collapsedPrev:\" + collapsedLast);\r\n\r\n        this.setState({\r\n            collapsed: !collapsedLast,\r\n        });\r\n    }\r\n    */\r\n\r\n\r\n    componentDidMount() {\r\n        if (debugEnabled)\r\n            consoleLog(\"componentDidMount._canMount:\" + this._canMount);\r\n\r\n        //TODO? navigator.onLink\r\n\r\n        //TODO?\r\n        //if (this._canMount)\r\n        //    fetchAppVersion(this.responseAppVersion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._canMount = false;\r\n        if (debugEnabled)\r\n            consoleLog(\"componentWillUnmount_canMount:\" + this._canMount);\r\n    }\r\n\r\n    /*\r\n    responseAppVersion = (appVer) => {\r\n        if (debugEnabled)\r\n            consoleLog(\"responseAppVersion_canMount:\" + this._canMount + \", \" + (this._canMount ? \"+PROCESS\" : \"!SKIP\"));\r\n    \r\n        if (this._canMount)\r\n            this.setState({ appVersion: appVer });\r\n    }\r\n    */\r\n\r\n//Note: Layout ref mk! (https://www.w3schools.com/bootstrap4/bootstrap_ref_all_classes.asp)\r\n    render() {\r\n        const pageLink = this.state.pageLink;\r\n        if (debugEnabled)\r\n            consoleLog(\"render; canMount:\" + this._canMount + \", pageLink:\" + pageLink);\r\n\r\n        let GoMainPage;\r\n        const paramSideBarLeft = {};\r\n        const paramSideBarRight = {};\r\n\r\n        //TODO!!! Also CARE SideBarLeft\r\n        //TODO!!! Also CARE SideBarRight\r\n\r\n        if (pageLink === HOME || pageLink === HOME_INDEX) {\r\n            GoMainPage = MainPage;\r\n            //paramSideBarLeft.main = pageLink;\r\n            paramSideBarLeft.title = \"NO_SEARCH\";\r\n            paramSideBarRight.title = \"NO_ADS\";\r\n            //...\r\n        }\r\n        else\r\n        //TODO? if (pageLink === USERGUIDE || pageLink === (\"/#\" + USERGUIDE)) {\r\n        if (pageLink === USERGUIDE) {\r\n            GoMainPage = UserGuide;\r\n            //paramSideBarLeft.main = pageLink;\r\n            paramSideBarLeft.title = \"UserGuide_SEARCH\";\r\n            paramSideBarRight.title = \"UserGuide_ADS\";\r\n        }\r\n        else\r\n        if (pageLink === DOWNLOAD) {\r\n            GoMainPage = Download;\r\n            paramSideBarLeft.title = \"Download_SEARCH\";\r\n            paramSideBarRight.title = \"Download_ADS\";\r\n        }\r\n        else\r\n        if (pageLink === JAVA) {\r\n            GoMainPage = Java;\r\n            paramSideBarLeft.title  = \"JAVA_SEARCH\";\r\n            paramSideBarRight.title = \"JAVA_ADS\";\r\n        }\r\n        else\r\n        if (pageLink === ANDROID) {\r\n            GoMainPage = Android;\r\n            //paramSideBarLeft.title  = null;\r\n            //paramSideBarRight.title = null;\r\n        }\r\n        else\r\n        if (pageLink === CONTACT) {\r\n            GoMainPage = Contact;\r\n        }\r\n        else\r\n        {\r\n            GoMainPage = NotFound;\r\n        }\r\n      \r\n        //TODO? row style={{ minHeight: calc(100vh - 80px)}}\r\n\r\n        // !!! CARE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n        // NavBarTop.outerHeight; height:148, marginTopBottom:0, ohTotal:148\r\n        const styleMTop = { marginTop:150 }; //px\r\n        // !!! CARE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n        //const styleSidesBG = { backgroundColor: \"lightgoldenrodyellow\" };\r\n        const styleSidesBG = { backgroundColor: \"lightgray\" };\r\n        //alternatives: lightcyan, lightgray, lightgoldenrodyellow, lightslategray, lightskyblue, lightyellow\r\n\r\n        //TODO? role=\"main\"\r\n\r\n        return (\r\n           <BrowserRouter>\r\n            <div>\r\n                <NavBarTop props={this.props} gotoLink={this.gotoLink}/>\r\n                { /*styleMTop:150px USED for FIXED_NAVBAR */}\r\n\r\n                <div className=\"container-fluid\" style={styleMTop}>\r\n                    <div className=\"row flex-xl-nowrap min-vh-100\">\r\n                        <div id=\"sidebar-left\" className=\"col-12 col-md-3 col-xl-2\" style={styleSidesBG}>\r\n                            <SideBarLeft param={paramSideBarLeft}/>\r\n                        </div>\r\n\r\n                        <main id=\"main-middle\" role=\"main\" className=\"col-12 col-md-9 col-xl-7\">\r\n                            <GoMainPage/>\r\n                        </main>\r\n\r\n                        <div id=\"sidebar-right\" className=\"d-none d-xl-block col-xl-3\" style={styleSidesBG}>\r\n                            <SideBarRight param={paramSideBarRight}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <NavBarBottom/>\r\n            </div>\r\n           </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {Component} from \"react\";\r\n\r\n//OK for +dev+prod; import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n//import { BrowserRouter as Router } from \"react-router-dom\";\r\n//prb! prod route! import { Router, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport Dashboard from \"./page/Dashboard\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { debugEnabled, consoleLogPrefixMsg } from \"./util/Config\";\r\n\r\nconst consoleLogMsg = consoleLogPrefixMsg(\"<App>\");\r\nconst consoleLog = (msg) => consoleLogMsg(msg);\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (debugEnabled)\r\n            consoleLogMsg(\"App.constructor\");\r\n    }\r\n\r\n    //ref for manual manage of pages!\r\n    //D:\\FrontEnd\\webApp\\router-spa__ORIG\\src\\MainUPD.js\r\n\r\n    /*TODO?\r\n    componentDidMount() {\r\n        const propLocation = this.props.location; //undefined\r\n        if (debugEnabled)\r\n            consoleLog(\"componentDidMount, propLocation:\" + propLocation);\r\n    }\r\n    */\r\n\r\n/*\r\n//@java_react_bootstrap/reactrouter_urlParams\r\na)\r\n   <Route path=\"/:id\" children={<Child />} />\r\n\r\nb)\r\n   let { path, url } = useRouteMatch();\r\n   <Link to={`${url}/rendering`}>Rendering with React</Link>\r\n\r\nc) https://reactrouter.com/web/example/query-parameters\r\nimport { BrowserRouter as Router, Link, useLocation } from \"react-router-dom\";\r\n..\r\n    <Router>\r\n      <QueryParamsDemo/>\r\n    </Router>\r\n\r\n// A custom hook that builds on useLocation to parse the query string for you.\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction QueryParamsDemo() {\r\n  let query = useQuery();\r\n  return (\r\n..\r\n        <ul>\r\n          <li><Link to=\"/account?name=netflix\">Netflix</Link></li>\r\n          <li><Link to=\"/account?name=zillow-group\">Zillow Group</Link></li>\r\n          ...\r\n        </ul>\r\n\r\n        <Child name={query.get(\"name\")} />\r\n..\r\n\r\nfunction Child({ name }) {\r\n  return (\r\n    <div>\r\n      {name ? (\r\n        <h3>\r\n          The <code>name</code> in the query string is &quot;{name}\r\n          &quot;\r\n        </h3>\r\n      ) : (\r\n        <h3>There is no name in the query string</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nPREV:\r\n            <Router>\r\n                <div>\r\n                    <Dashboard>\r\n                        <Switch>\r\n                            <Route exact path={HOME} component={MainPage}/>\r\n                            <Route path={HOME_INDEX} component={MainPage}/>\r\n\r\n                            <Route path={USERGUIDE} component={UserGuide}/>\r\n                            <Route path={DOWNLOAD} component={Download}/>\r\n\r\n                            <Route path={JAVA} component={Java}/>\r\n                            <Route path={ANDROID} component={Android}/>\r\n                            <Route path={CONTACT} component={Contact}/>\r\n\r\n                            <Route component={NotFound}/>\r\n                        </Switch>\r\n                    </Dashboard>\r\n\r\n                    <ToastContainer position=\"top-right\" className=\"toastify\"/>\r\n                </div>\r\n            </Router>\r\n\r\n*/\r\n\r\n    render() {\r\n      if (debugEnabled)\r\n            consoleLog(\"render\");\r\n\r\n      return (\r\n          <div>\r\n            <Dashboard/>\r\n\r\n            <ToastContainer position=\"top-right\" className=\"toastify\"/>\r\n          </div>);\r\n    }\r\n}\r\n\r\nexport default App;\r\n","//ref for meta, layout ext.\n//D:\\FrontEnd\\webApp\\htmlBootstrap\\htmlBootstrapMkyong\\htmlTest01_Work02_Body.html\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//? by ManualRouter\nimport App from \"./App\";\n\n//+by BrowserRouter;\n//import App from \"./App_ROUTER\";\n\n//Importing the Bootstrap CSS\n//!DO NOT import \"jquery/dist/jquery.min\" for react-bootstrap components!\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n/*PRB! TEST2!\nimport \"./asset/bootstrapV452/dist/css/bootstrap.min.css\";\n\nimport \"./asset/jqueryV351/dist/jquery.min\";\nimport \"./asset/bootstrapV452/dist/js/bootstrap.min\";\n*/\n\nconst appMain = <App/>;\nconst rootElem = document.getElementById(\"root\");\n\nReactDOM.render(appMain, rootElem);\n"],"sourceRoot":""}